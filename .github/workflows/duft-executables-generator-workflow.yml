name: DUFT Executables CI Pipeline
run-name: DUFT-Executables-Build-Pipeline
on:
  workflow_dispatch: # Allows manual trigger button
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: "0 2 * * 1,3,5" # Repeat at 05:00am (EAT) of every Monday, Wednesday and Friday
jobs:
  generate-implementations-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read implementations.json and generate matrix
        id: set-matrix
        run: |
          MATRIX=$(cat implementations.json | jq -c '.')
          echo "Generated matrix: $MATRIX"
          echo "::set-output name=matrix::$MATRIX"

  build-linux-executables:
    needs: generate-implementations-matrix
    strategy:
      matrix:
        config: ${{ fromJson(needs.generate-implementations-matrix.outputs.matrix) }}
      max-parallel: 1 # Ensures the matrix runs serially
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          repository: ${{github.repository}}
          path: main

      - name: Prepare node
        uses: actions/setup-node@v4
        with:
          node-version: '22.4.1'

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniforge-version: latest

      - name: Run server resources preparation script
        working-directory: main
        run: |
          sh scripts/shell/server_resources_preparation_actions.sh
        env:
          GITHUB_ORG: "UCSF-IGHS"
          GITHUB_TOKEN: ${{ secrets.DUFT_CLONE_TOKEN }}
          REPO2_REPO: "duft-config"
          REPO2_BRANCH: ${{ matrix.config.configs }}
          REPO3_REPO: "duft-workspace-django"
          REPO3_BRANCH: "main"

      - name: Install yarn packages
        working-directory: main
        run: yarn install --legacy-peer-deps

      - name: Build executables
        working-directory: main
        env:
          GH_TOKEN: ${{ secrets.DUFT_PUBLISH_TOKEN }}
        run: yarn run build-and-package -- --linux --code=${{ matrix.config.code }}

  build-windows-executables:
    needs: generate-implementations-matrix
    strategy:
      matrix:
        config: ${{ fromJson(needs.generate-implementations-matrix.outputs.matrix) }}
      max-parallel: 1 # Ensures the matrix runs serially
    runs-on: windows-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          repository: ${{github.repository}}
          path: main

      - name: Prepare node
        uses: actions/setup-node@v4
        with:
          node-version: '22.4.1'

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniforge-version: latest

      - name: Run server resources preparation script
        working-directory: main
        run: |
          powershell -ExecutionPolicy Bypass -File scripts/powershell/server_resources_preparation_actions.ps1
        env:
          GITHUB_ORG: "UCSF-IGHS"
          GITHUB_TOKEN: ${{ secrets.DUFT_CLONE_TOKEN }}
          REPO2_REPO: "duft-config"
          REPO2_BRANCH: ${{ matrix.config.configs }}
          REPO3_REPO: "duft-workspace-django"
          REPO3_BRANCH: "main"

      - name: Install yarn packages
        working-directory: main
        run: yarn install --legacy-peer-deps

      - name: Build executables for x32 and x64 architectures of Windows platform
        working-directory: main
        env:
          GH_TOKEN: ${{ secrets.DUFT_PUBLISH_TOKEN }}
        run: yarn run build-and-package -- --win --code=${{ matrix.config.code }}

  build-mac-executables:
    needs: generate-implementations-matrix
    strategy:
      matrix:
        config: ${{ fromJson(needs.generate-implementations-matrix.outputs.matrix) }}
      max-parallel: 1 # Ensures the matrix runs serially
    runs-on: macos-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          repository: ${{github.repository}}
          path: main

      - name: Prepare node
        uses: actions/setup-node@v4
        with:
          node-version: '22.4.1'

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniforge-version: latest

      - name: Run server resources preparation script
        working-directory: main
        run: |
          sh scripts/shell/server_resources_preparation_actions.sh
        env:
          GITHUB_ORG: "UCSF-IGHS"
          GITHUB_TOKEN: ${{ secrets.DUFT_CLONE_TOKEN }}
          REPO2_REPO: "duft-config"
          REPO2_BRANCH: ${{ matrix.config.configs }}
          REPO3_REPO: "duft-workspace-django"
          REPO3_BRANCH: "main"

      - name: Install yarn packages
        working-directory: main
        run: yarn install --legacy-peer-deps

      - name: Build executables for MacOS platform
        working-directory: main
        env:
          GH_TOKEN: ${{ secrets.DUFT_PUBLISH_TOKEN }}
        run: yarn run build-and-package -- --mac --code=${{ matrix.config.code }}